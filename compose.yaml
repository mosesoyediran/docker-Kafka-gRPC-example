version: "3.9"

networks:
  svc-net:

x-kafka-common: &kafka-common
  image: bitnami/kafka:3.6.1
  networks: [svc-net]
  restart: unless-stopped
  env_file: [.env]
  volumes: &kafka-common-volumes
    # mount a fresh volume at the broker's data dir
    - ${DATA_VOLUME}:/bitnami/kafka
    # mount your custom log4j
    - ./config/log4j.properties:/opt/bitnami/kafka/config/log4j.properties:ro

  environment: &kafka-env
    KAFKA_CFG_PROCESS_ROLES: broker,controller
    KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
    KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
    ALLOW_PLAINTEXT_LISTENER: "yes"
    KAFKA_CFG_NUM_PARTITIONS: "3"
    KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
    KAFKA_KRAFT_CLUSTER_ID: ${KAFKA_KRAFT_CLUSTER_ID}

services:
  kafka1:
    <<: *kafka-common
    volumes:
      - kafka1-data:/bitnami/kafka
      - ./config/log4j.properties:/opt/bitnami/kafka/config/log4j.properties:ro
    hostname: kafka1
    environment:
      <<: *kafka-env
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,CONTROLLER://:9093
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092
    ports:
      - "19092:9092"
    healthcheck:
      test: ["CMD", "bash", "-lc", "exec 3<>/dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka2:
    <<: *kafka-common
    volumes:
      - kafka2-data:/bitnami/kafka
      - ./config/log4j.properties:/opt/bitnami/kafka/config/log4j.properties:ro
    hostname: kafka2
    environment:
      <<: *kafka-env
      KAFKA_CFG_NODE_ID: "2"
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,CONTROLLER://:9093
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka2:9092

    healthcheck:
      test: ["CMD", "bash", "-lc", "exec 3<>/dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka3:
    <<: *kafka-common
    volumes:
      - kafka3-data:/bitnami/kafka
      - ./config/log4j.properties:/opt/bitnami/kafka/config/log4j.properties:ro
    hostname: kafka3
    environment:
      <<: *kafka-env
      KAFKA_CFG_NODE_ID: "3"
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,CONTROLLER://:9093
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka3:9092
    
    healthcheck:
      test: ["CMD", "bash", "-lc", "exec 3<>/dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  
  kafka-agent:
    build:
      context: .            
      dockerfile: Dockerfile   
      target: app               
    container_name: kafka-agent
    networks:
      - svc-net
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy
    env_file:
      - .env
    command:
      - python
      - -u
      - -m
      - kafka.app

    restart: unless-stopped


volumes:
  kafka1-data:
  kafka2-data:
  kafka3-data:
